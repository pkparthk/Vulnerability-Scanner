import requests
import schedule
import time
import logging
import smtplib
from email.mime.text import MIMEText

logging.basicConfig(filename='website_monitor.log', level=logging.INFO, format='%(asctime)s %(message)s')

def send_email(subject, body):
    from_email = 'nikalpahelifursatse@gmail.com'
    to_email = 'pobodyisnerfect1@example.com'
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = from_email
    msg['To'] = to_email

    try:
        with smtplib.SMTP('smtp.example.com', 587) as server:
            server.starttls()
            server.login(from_email, 'your_password')
            server.sendmail(from_email, to_email, msg.as_string())
            logging.info("Email sent successfully")
    except Exception as e:
        logging.error(f"Error sending email: {e}")

def check_website():
    url = 'http://example.com' 
    try:
        response = requests.get(url)
        if response.status_code == 200:
            logging.info(f"Website is up. Status code: {response.status_code}")
        else:
            logging.warning(f"Website might be down. Status code: {response.status_code}")
            send_email("Website Down", f"Website returned status code {response.status_code}")
    except requests.exceptions.RequestException as e:
        logging.error(f"Error checking website: {e}")
        send_email("Website Check Failed", f"Error checking website: {e}")


schedule.every(5).minutes.do(check_website)

if __name__ == "__main__":
    # Initial check
    check_website()

    # Continuously run the scheduled tasks
    while True:
        schedule.run_pending()
        time.sleep(1)
